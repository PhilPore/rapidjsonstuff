{
    "id": "http://palisade.njit.edu/schemas/config.json",
    "$schema": "http://json-schema.org/schema#",
    "title": "All Schemes",
    "description": "Information about all scheme in PASLISADE",
    "type": "object",
    "properties": {
        "bfvrns": {
            "schemepath": "scheme/bfvrns/bfvrns.h",
            "requiredParameter": [
                {
                    "": "No parameters"
                },
                {
                    "rhs": "constLPCryptoParametersBFVrns&"
                },
                {
                    "params,": "shared_ptr<typenameElement::Params>",
                    "&plaintextModulus": "constPlaintextModulus",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "mode = RLWE": "MODE",
                    "depth = 1": "int"
                },
                {
                    "params,": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "mode = RLWE": "MODE",
                    "depth = 1": "int"
                },
                {
                    "params,": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "SecurityLevel",
                    "relinWindow": "usint",
                    "mode = RLWE": "MODE",
                    "depth = 1": "int"
                }
            ],
            "schema": [],
            "validation": false
        },
        "bfvrnsB": {
            "schemepath": "scheme/bfvrnsb/bfvrnsB.h",
            "requiredParameter": [
                {
                    "": "No parameters"
                },
                {
                    "rhs": "constLPCryptoParametersBFVrnsB&"
                },
                {
                    "params,": "shared_ptr<typenameElement::Params>",
                    "&plaintextModulus": "constPlaintextModulus",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "mode = RLWE": "MODE",
                    "depth = 1": "int"
                },
                {
                    "params,": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "mode = RLWE": "MODE",
                    "depth = 1": "int"
                },
                {
                    "params,": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "SecurityLevel",
                    "relinWindow": "usint",
                    "mode = RLWE": "MODE",
                    "depth = 1": "int"
                }
            ],
            "schema": [],
            "validation": false
        },
        "ckks": {
            "schemepath": "scheme/ckks/ckks.h",
            "requiredParameter": [
                {
                    "": "No parameters"
                },
                {
                    "rhs": "constLPCryptoParametersCKKS&"
                },
                {
                    "params": "shared_ptr<typenameElement::Params>",
                    "&plaintextModulus": "constPlaintextModulus",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "mode": "MODE",
                    "depth = 1": "int",
                    "maxDepth = 1": "int",
                    "ksTech = BV": "KeySwitchTechnique"
                },
                {
                    "params": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "mode": "MODE",
                    "depth = 1": "int",
                    "maxDepth = 1": "int",
                    "ksTech = BV": "KeySwitchTechnique"
                }
            ],
            "schema": [],
            "validation": false
        },
        "rlwe": {
            "schemepath": "scheme/rlwe.h",
            "requiredParameter": [
                {
                    "": "No parameters"
                },
                {
                    "rhs": "constLPCryptoParametersRLWE&"
                },
                {
                    "params": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "depth = 1": "int",
                    "maxDepth = 1": "int"
                },
                {
                    "params": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "stdLevel": "SecurityLevel",
                    "relinWindow": "usint",
                    "depth = 1": "int",
                    "maxDepth = 1": "int"
                }
            ],
            "schema": [],
            "validation": false
        },
        "stst": {
            "schemepath": "scheme/stst/stst.h",
            "requiredParameter": [
                {
                    "": "No parameters"
                },
                {
                    "rhs": "constLPCryptoParametersStehleSteinfeld&"
                },
                {
                    "params": "shared_ptr<typenameElement::Params>",
                    "&plaintextModulus": "constPlaintextModulus",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "distributionParmStst": "float"
                },
                {
                    "params": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "distributionParmStst": "float"
                }
            ],
            "schema": [],
            "validation": false
        },
        "bgv": {
            "schemepath": "scheme/bgv/bgv.h",
            "requiredParameter": [
                {
                    "": "No parameters"
                },
                {
                    "rhs": "constLPCryptoParametersBGV&"
                },
                {
                    "params": "shared_ptr<typenameElement::Params>",
                    "&plaintextModulus": "constPlaintextModulus",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "mode": "MODE"
                },
                {
                    "params": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "mode": "MODE"
                }
            ],
            "schema": [],
            "validation": false
        },
        "bfv": {
            "schemepath": "scheme/bfv/bfv.h",
            "requiredParameter": [
                {
                    "": "No parameters"
                },
                {
                    "rhs": "constLPCryptoParametersBFV&"
                },
                {
                    "params,": "shared_ptr<typenameElement::Params>",
                    "&plaintextModulus": "constPlaintextModulus",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "&delta = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "mode = RLWE": "MODE",
                    "&bigModulus = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "&bigRootOfUnity = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "&bigModulusArb = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "&bigRootOfUnityArb = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "depth = 1": "int"
                },
                {
                    "params,": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "float",
                    "relinWindow": "usint",
                    "&delta = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "mode = RLWE": "MODE",
                    "&bigModulus = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "&bigRootOfUnity = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "&bigModulusArb = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "&bigRootOfUnityArb = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "depth = 1": "int"
                },
                {
                    "params,": "shared_ptr<typenameElement::Params>",
                    "encodingParams": "EncodingParams",
                    "distributionParameter": "float",
                    "assuranceMeasure": "float",
                    "securityLevel": "SecurityLevel",
                    "relinWindow": "usint",
                    "&delta = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "mode = RLWE": "MODE",
                    "&bigModulus = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "&bigRootOfUnity = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "&bigModulusArb = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "&bigRootOfUnityArb = typename Element::Integer(0)": "consttypenameElement::Integer",
                    "depth = 1": "int"
                }
            ],
            "schema": [],
            "validation": false
        },
        "nullscheme": {
            "schemepath": "scheme/null/nullscheme.h",
            "requiredParameter": [
                {
                    "": "No parameters"
                },
                {
                    "plaintextModulus": "constshared_ptr<typenameElement::Params>ep,constPlaintextModulus&"
                },
                {
                    "encodingParams": "shared_ptr<typenameElement::Params>ep,EncodingParams"
                },
                {
                    "rhs": "constLPCryptoParametersNull&"
                }
            ],
            "schema": [],
            "validation": false
        }
    }
}
